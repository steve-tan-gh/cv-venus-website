"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/discounts/page",{

/***/ "(app-pages-browser)/./lib/cart.ts":
/*!*********************!*\
  !*** ./lib/cart.ts ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCart: () => (/* binding */ addToCart),\n/* harmony export */   calculateCartWithDiscounts: () => (/* binding */ calculateCartWithDiscounts),\n/* harmony export */   clearCart: () => (/* binding */ clearCart),\n/* harmony export */   getActiveDiscounts: () => (/* binding */ getActiveDiscounts),\n/* harmony export */   getCartItems: () => (/* binding */ getCartItems),\n/* harmony export */   removeFromCart: () => (/* binding */ removeFromCart),\n/* harmony export */   updateCartItemQuantity: () => (/* binding */ updateCartItemQuantity)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\nasync function getCartItems(userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").select(\"\\n      *,\\n      products (\\n        id,\\n        name,\\n        slug,\\n        price,\\n        stock,\\n        image_url,\\n        is_active,\\n        category_id,\\n        brand_id,\\n        categories (\\n          id,\\n          name,\\n          slug\\n        ),\\n        brands (\\n          id,\\n          name,\\n          slug\\n        )\\n      )\\n    \").eq(\"user_id\", userId).order(\"created_at\", {\n        ascending: false\n    });\n    if (error) throw error;\n    return data || [];\n}\nasync function addToCart(userId, productId) {\n    let quantity = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;\n    // First check if product has enough stock\n    const { data: product, error: productError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"products\").select(\"stock, is_active\").eq(\"id\", productId).single();\n    if (productError) throw productError;\n    if (!product.is_active) throw new Error(\"Product is not available\");\n    if (product.stock < quantity) throw new Error(\"Not enough stock available\");\n    // Check if item already exists in cart\n    const { data: existingItem, error: existingError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").select(\"*\").eq(\"user_id\", userId).eq(\"product_id\", productId).single();\n    if (existingError && existingError.code !== \"PGRST116\") {\n        throw existingError;\n    }\n    if (existingItem) {\n        // Update existing item\n        const newQuantity = existingItem.quantity + quantity;\n        if (product.stock < newQuantity) {\n            throw new Error(\"Not enough stock available\");\n        }\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").update({\n            quantity: newQuantity,\n            updated_at: new Date().toISOString()\n        }).eq(\"id\", existingItem.id);\n        if (error) throw error;\n    } else {\n        // Add new item\n        const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").insert({\n            user_id: userId,\n            product_id: productId,\n            quantity\n        });\n        if (error) throw error;\n    }\n}\nasync function updateCartItemQuantity(cartItemId, quantity, userId) {\n    var _cartItem_products, _cartItem_products1;\n    if (quantity <= 0) {\n        await removeFromCart(cartItemId, userId);\n        return;\n    }\n    // Check stock availability\n    const { data: cartItem, error: cartError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").select(\"\\n      *,\\n      products (stock, is_active)\\n    \").eq(\"id\", cartItemId).eq(\"user_id\", userId).single();\n    if (cartError) throw cartError;\n    if (!((_cartItem_products = cartItem.products) === null || _cartItem_products === void 0 ? void 0 : _cartItem_products.is_active)) throw new Error(\"Product is not available\");\n    if ((((_cartItem_products1 = cartItem.products) === null || _cartItem_products1 === void 0 ? void 0 : _cartItem_products1.stock) || 0) < quantity) throw new Error(\"Not enough stock available\");\n    const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").update({\n        quantity,\n        updated_at: new Date().toISOString()\n    }).eq(\"id\", cartItemId).eq(\"user_id\", userId);\n    if (error) throw error;\n}\nasync function removeFromCart(cartItemId, userId) {\n    const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").delete().eq(\"id\", cartItemId).eq(\"user_id\", userId);\n    if (error) throw error;\n}\nasync function clearCart(userId) {\n    const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"cart_items\").delete().eq(\"user_id\", userId);\n    if (error) throw error;\n}\nasync function getActiveDiscounts() {\n    const now = new Date().toISOString();\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"discounts\").select(\"*\").eq(\"is_active\", true).or(\"start_date.is.null,start_date.lte.\".concat(now)).or(\"end_date.is.null,end_date.gte.\".concat(now));\n    if (error) throw error;\n    return data || [];\n}\nasync function calculateCartWithDiscounts(userId) {\n    const cartItems = await getCartItems(userId);\n    const discounts = await getActiveDiscounts();\n    let subtotal = 0;\n    const appliedDiscounts = [];\n    // Calculate subtotal\n    cartItems.forEach((item)=>{\n        if (item.products) {\n            subtotal += item.products.price * item.quantity;\n        }\n    });\n    // Apply discounts\n    for (const discount of discounts){\n        let affectedItems = [];\n        // Determine which items this discount applies to\n        if (discount.applies_to === \"all\") {\n            affectedItems = cartItems.filter((item)=>{\n                var _item_products;\n                return (_item_products = item.products) === null || _item_products === void 0 ? void 0 : _item_products.is_active;\n            });\n        } else if (discount.applies_to === \"category\") {\n            affectedItems = cartItems.filter((item)=>{\n                var _item_products, _item_products1, _item_products2, _item_products3;\n                console.log(\"Checking category discount:\", {\n                    discountCategoryId: discount.applies_to_id,\n                    productCategoryId: (_item_products = item.products) === null || _item_products === void 0 ? void 0 : _item_products.category_id,\n                    productName: (_item_products1 = item.products) === null || _item_products1 === void 0 ? void 0 : _item_products1.name,\n                    match: ((_item_products2 = item.products) === null || _item_products2 === void 0 ? void 0 : _item_products2.is_active) && item.products.category_id === discount.applies_to_id\n                });\n                return ((_item_products3 = item.products) === null || _item_products3 === void 0 ? void 0 : _item_products3.is_active) && item.products.category_id === discount.applies_to_id;\n            });\n        } else if (discount.applies_to === \"brand\") {\n            affectedItems = cartItems.filter((item)=>{\n                var _item_products, _item_products1, _item_products2, _item_products3;\n                console.log(\"Checking brand discount:\", {\n                    discountBrandId: discount.applies_to_id,\n                    productBrandId: (_item_products = item.products) === null || _item_products === void 0 ? void 0 : _item_products.brand_id,\n                    productName: (_item_products1 = item.products) === null || _item_products1 === void 0 ? void 0 : _item_products1.name,\n                    match: ((_item_products2 = item.products) === null || _item_products2 === void 0 ? void 0 : _item_products2.is_active) && item.products.brand_id === discount.applies_to_id\n                });\n                return ((_item_products3 = item.products) === null || _item_products3 === void 0 ? void 0 : _item_products3.is_active) && item.products.brand_id === discount.applies_to_id;\n            });\n        } else if (discount.applies_to === \"product\") {\n            affectedItems = cartItems.filter((item)=>{\n                var _item_products;\n                return ((_item_products = item.products) === null || _item_products === void 0 ? void 0 : _item_products.is_active) && item.products.id === discount.applies_to_id;\n            });\n        }\n        console.log(\"Discount application:\", {\n            discountName: discount.name,\n            appliesTo: discount.applies_to,\n            appliesToId: discount.applies_to_id,\n            affectedItemsCount: affectedItems.length,\n            totalCartItems: cartItems.length\n        });\n        // Calculate total quantity for affected items\n        const totalQuantity = affectedItems.reduce((sum, item)=>sum + item.quantity, 0);\n        if (totalQuantity >= discount.min_quantity) {\n            let freeQuantity = 0;\n            let discountAmount = 0;\n            if (discount.type === \"buy_x_get_y_free\") {\n                const eligibleSets = Math.floor(totalQuantity / discount.min_quantity);\n                freeQuantity = eligibleSets * (discount.free_quantity || 0);\n                // Calculate discount amount based on cheapest items\n                const itemPrices = affectedItems.flatMap((item)=>{\n                    var _item_products;\n                    return Array(item.quantity).fill(((_item_products = item.products) === null || _item_products === void 0 ? void 0 : _item_products.price) || 0);\n                }).sort((a, b)=>a - b);\n                discountAmount = itemPrices.slice(0, freeQuantity).reduce((sum, price)=>sum + price, 0);\n            } else if (discount.type === \"buy_x_get_percentage\") {\n                const affectedItemsTotal = affectedItems.reduce((sum, item)=>{\n                    var _item_products;\n                    return sum + (((_item_products = item.products) === null || _item_products === void 0 ? void 0 : _item_products.price) || 0) * item.quantity;\n                }, 0);\n                discountAmount = affectedItemsTotal * ((discount.discount_percentage || 0) / 100);\n            }\n            if (discountAmount > 0 || freeQuantity > 0) {\n                appliedDiscounts.push({\n                    discount,\n                    affectedItems,\n                    freeQuantity,\n                    discountAmount\n                });\n            }\n        }\n    }\n    const totalDiscount = appliedDiscounts.reduce((sum, applied)=>sum + applied.discountAmount, 0);\n    const finalTotal = Math.max(0, subtotal - totalDiscount);\n    return {\n        items: cartItems,\n        subtotal,\n        appliedDiscounts,\n        totalDiscount,\n        finalTotal\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/cart.ts\n"));

/***/ })

});